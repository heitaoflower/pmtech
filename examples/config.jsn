{
    //
    // common
    //
    
    base: {
        tools: {
            premake: "../tools/premake/premake5",
            pmfx: "../third_party/pmfx-shader/build_pmfx.py",
            texturec: "../third_party/texturec/$platform/texturec",
            models: "../tools/build_scripts/build_models.py"
        },
    
        env: {
            pmtech_dir: "../"
        },
    },
    
    //
    // mac
    //
    
    mac(base): {

        clean: [
            "build/osx",
            "bin/osx",
            "temp"
        ],
        
        libs: [
            "cd ../third_party && ./build_libs.sh osx",
        ],
        
        premake: [
            "xcode4",
            "--renderer=metal", 
            "--platform_dir=osx"
        ],
        
        pmfx: [
            "-shader_platform metal",
            "-shader_version macosx",
            "-i assets/shaders ../assets/shaders",
            "-o bin/osx/data/pmfx/metal",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ],
        
        models: [
            ["assets/mesh", "bin/osx/data/models"]
        ],
        
        textures: [
            ["assets/textures", "bin/osx/data/textures"],
            ["../assets/textures", "bin/osx/data/textures"]
        ],
        
        copy: [
            ["assets/audio", "bin/osx/data/audio"],
            ["../assets/audio", "bin/osx/data/audio"],
            ["assets/configs", "bin/osx/data/configs"],
            ["../assets/configs", "bin/osx/data/configs"],
            ["../assets/fonts", "bin/osx/data/fonts"],
            ["assets/scene", "bin/osx/data/scene"]
        ],
        
        data_dir: "bin/osx/data/"
    },
    
    mac-gl(mac): {

        premake: [
            "xcode4",
            "--renderer=opengl", 
            "--platform_dir=osx"
        ],
        
        pmfx: [
            "-shader_platform glsl",
            "-shader_version 330",
            "-i assets/shaders ../assets/shaders",
            "-o bin/osx/data/pmfx/glsl",
            "-h shader_structs",
            "-t temp/shaders",
            "-source",
            "-v_flip"
        ]
    },

    mac-gl-ci(mac): {

        premake: [
            "gmake",
            "--renderer=opengl", 
            "--platform_dir=osx"
        ]
    },

    mac-metal-ci(mac): {

        premake: [
            "gmake",
            "--renderer=metal", 
            "--platform_dir=osx"
        ]
    },
    
    //
    // iOS
    //
    
    ios(base): {
        require_teamid: true,
        
        clean: [
            "build/ios",
            "bin/ios",
            "temp"
        ],
        
        libs: [
            "cd ../third_party && ./build_libs.sh ios",
        ],
        
        premake: [
            "xcode4",
            "--renderer=metal", 
            "--platform_dir=ios",
            "--xcode_target=ios"
        ],
        
        pmfx: [
            "-shader_platform metal",
            "-shader_version ios",
            "-i assets/shaders ../assets/shaders",
            "-o bin/ios/data/pmfx/metal",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ],
        
        copy: [
            ["assets/audio", "bin/ios/data/audio"],
            ["../assets/audio", "bin/ios/data/audio"],
            ["assets/configs", "bin/ios/data/configs"],
            ["../assets/configs", "bin/ios/data/configs"],
            ["../assets/fonts", "bin/ios/data/fonts"],
            ["assets/scene", "bin/ios/data/scene"]
        ],
        
        textures: [
            ["assets/textures", "bin/ios/data/textures"],
            ["../assets/textures", "bin/ios/data/textures"]
        ],
        
        models: [
            ["assets/mesh", "bin/ios/data/models"]
        ],
    },
    
    //
    // win32
    //
    
    win32: {
        jsn_inherit: ["base"],
        
        clean: [
            "build/win32",
            "bin/win32",
            "shader_structs",
            "temp"
        ],
        
        libs: [
            "cd ..\\third_party && .\\build_libs.bat ",
        ],
        
        premake: [
            "vs2017",
            "--renderer=dx11", 
            "--platform_dir=win32"
        ],
        
        pmfx: [
            "-shader_platform hlsl",
            "-shader_version 3_0",
            "-i assets/shaders ../assets/shaders",
            "-o bin/win32/data/pmfx/hlsl",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ],
        
        models: [
            ["assets/mesh", "bin/win32/data/models"]
        ],
        
        textures: [
            ["assets/textures", "bin/win32/data/textures"],
            ["../assets/textures", "bin/win32/data/textures"]
        ],
        
        copy: [
            ["assets/audio", "bin/win32/data/audio"],
            ["assets/configs", "bin/win32/data/configs"],
            ["assets/scene", "bin/win32/data/scene"],
            ["../third_party/shared_libs/win32", "bin/win32"],
            ["../assets/configs", "bin/win32/data/configs"],
            ["../assets/fonts", "bin/win32/data/fonts"]
        ],
        
        data_dir: "bin/win32/data/"
    },
    
    win32-vulkan: {
        jsn_inherit: ["win32"],
        
        premake: [
            "vs2017",
            "--renderer=vulkan", 
            "--platform_dir=win32"
        ],
        
        pmfx: [
            "-shader_platform spirv",
            "-shader_version 420",
            "-i assets/shaders ../assets/shaders",
            "-o bin/win32/data/pmfx/spirv",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ],
    },
    
    win32-gl: {
        jsn_inherit: ["win32"],
        
        premake: [
            "vs2017",
            "--renderer=opengl", 
            "--platform_dir=win32"
        ],
        
        pmfx: [
            "-shader_platform glsl",
            "-shader_version 330",
            "-i assets/shaders ../assets/shaders",
            "-o bin/win32/data/pmfx/glsl",
            "-h shader_structs",
            "-t temp/shaders",
            "-source",
            "-v_flip"
        ],
    },
    
    // linux
    
    linux: {
        jsn_inherit: ["base"],

        tools: {
            premake: "../tools/premake/premake5_linux"
	    },
        
        clean: [
            "build/linux",
            "bin/linux",
            "shader_structs",
            "temp"
        ],
        
        libs: [
            "cd ../third_party && ./build_libs.sh linux",
        ],
        
        premake: [
            "gmake",
            "--renderer=opengl", 
            "--platform_dir=linux"
        ],
        
        pmfx: [
            "-shader_platform glsl",
            "-shader_version 330",
            "-i assets/shaders ../assets/shaders",
            "-o bin/linux/data/pmfx/glsl",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ],
        
        models: [
            ["assets/mesh", "bin/linux/data/models"]
        ],
        
        textures: [
            ["assets/textures", "bin/linux/data/textures"],
            ["../assets/textures", "bin/linux/data/textures"]
        ],
        
        copy: [
            ["assets/audio", "bin/linux/data/audio"],
            ["../assets/audio", "bin/linux/data/audio"],
            ["assets/configs", "bin/linux/data/configs"],
            ["../assets/configs", "bin/linux/data/configs"],
            ["../assets/fonts", "bin/linux/data/fonts"],
            ["assets/scene", "bin/linux/data/scene"]
        ],
        
        data_dir: "bin/linux/data/"
    },

    linux-vulkan: {
        jsn_inherit: ["linux"],

        premake: [
            "gmake",
            "--renderer=vulkan", 
            "--platform_dir=linux"
        ],

        pmfx: [
            "-shader_platform spirv",
            "-shader_version 450",
            "-i assets/shaders ../assets/shaders",
            "-o bin/linux/data/pmfx/spirv",
            "-h shader_structs",
            "-t temp/shaders",
            "-source"
        ]
    }
}
